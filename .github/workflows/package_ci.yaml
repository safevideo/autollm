name: Package CI

on:
  schedule:
    - cron: '0 0 * * *' # Runs at 00:00 UTC every day

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']
      fail-fast: false

    steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}

        - name: Restore Ubuntu cache
          uses: actions/cache@v3
          if: matrix.operating-system == 'ubuntu-latest'
          with:
            path: ~/.cache/pip
            key: ${{ matrix.operating-system }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
            restore-keys: ${{ matrix.operating-system }}-${{ matrix.python-version }}-

        - name: Restore MacOS cache
          uses: actions/cache@v3
          if: matrix.operating-system == 'macos-latest'
          with:
            path: ~/Library/Caches/pip
            key: ${{ matrix.operating-system }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
            restore-keys: ${{ matrix.operating-system }}-${{ matrix.python-version }}-

        - name: Restore Windows cache
          uses: actions/cache@v3
          if: matrix.operating-system == 'windows-latest'
          with:
            path: ~\AppData\Local\pip\Cache
            key: ${{ matrix.operating-system }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py')}}
            restore-keys: ${{ matrix.operating-system }}-${{ matrix.python-version }}-

        - name: Update pip
          run: python -m pip install --upgrade pip

        - name: Install local package with dev and readers dependencies
          run: >
            pip install -e .[dev,readers]

        - name: Check styling with pre-commit
          run: |
            pre-commit install
            pre-commit run --all-files

        - name: Run tests
          env:
            AZURE_API_KEY: ${{ secrets.AZURE_API_KEY }}
            AZURE_API_BASE: ${{ secrets.AZURE_API_BASE }}
            AZURE_API_VERSION: ${{ secrets.AZURE_API_VERSION }}
          run: pytest
